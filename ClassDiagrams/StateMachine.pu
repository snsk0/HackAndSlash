@startuml StateMachine

namespace StateMachines{
    class StateMachineManager{
        StateMachineFactory stateMachineFactory
        IEnumalable<StateMachine> instancedStateMachines
        void ProcessStateMachine()
    }
    class StateMachineFactory{
        IObsrervable<StateMachineController> createdControllerObservable
        StateMachine CreateStateMachine(StateMachine stateMachine)
    }
    abstract class BaseState{
        List<Transition> transitionList
        Blackboard blackboard
        void FinishState()
    }
    class StateMachine{
        List<TransitionList> transitionList
        StateMachine subStateMachine
        BaseState entryState
        BaseState currentState
        Blackboard blackboard
        void CheckTransition()
        void ChangeState()
    }
    class StateMachineController{
        StateMachineType stateMachineType
        StateMachine useStateMachine
        StateMachineController(Type stateMachineType)
    }
    class Transition{
        BaseState nextState
        Func<BlackboardKeyType, bool> CanTransition
    }
    class Blackboard{
        Dictionary<BlackboardKeyType, Object> keyDictionary
    }
    enum BlackboardKeyType
    enum StateMachineType
    enum StateType

    StateMachineManager-->StateMachineFactory
    StateMachineManager-->StateMachine
    StateMachineController-->StateMachineFactory
    StateMachineFactory-->StateMachine

    StateMachineController-->StateMachine
    StateMachine-->StateMachine
    StateMachine-->BaseState
    StateMachine-->Transition
    StateMachine-->Blackboard
    BaseState-->Transition
    BaseState-->Blackboard
}

namespace Enemies{
    class EnemyManager{
        void GenerateEnemy()
    }
    class EnemyGenerator{
        GameObject GenerateEnemy(EnemyType enemyType)
    }
    class EnemyControllerFactory{
        EnemyController CreateEnemyController(EnemyType)
    }
    class EnemyController
    enum EnemyType

    EnemyManager-->EnemyGenerator
    EnemyManager-->EnemyControllerFactory
    EnemyControllerFactory-->EnemyController

    EnemyGenerator..>EnemyType
    EnemyControllerFactory..>EnemyType
}

StateMachines.StateMachineController<|--Enemies.EnemyController

@enduml